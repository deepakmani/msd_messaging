{"ast":null,"code":"import _classCallCheck from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/deepakabs/programming/node_projects/msd_messaging/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport green_circle from './images/green_circle.png';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport { DirectMessage } from './components/DirectMessage.js'; //import { Link, NavLink, Route } from 'react-router-dom' \n\nimport { Switch, Link, NavLink, Route } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); // Initialize local variable\n\n    _this.selected_member_to_message = \"\"; // Declare DirectMessageUsers\n\n    _this.state = {\n      // Set currentUser\n      users: [],\n      // Show loading spinner \n      fetching_direct_message_counts: false,\n      // Indicate failure or success of request\n      fetched_members_success: true,\n      // Display Current User at top\n      current_user: {\n        name: \"DeepakABS\",\n        profile_img_url: \"ABS\",\n        username: \"deepakabs\"\n      },\n      // Display \n      members: [],\n      selected_member_status: \"All\",\n      member_statuses: [\"All\", \"Online\", \"Away\", \"Offline\"],\n      test: 1,\n      // For setting class\n      active_nav: \"\" // Class binding \n\n    };\n    _this.selectMemberToMessage = _this.selectMemberToMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.selectCurrentUser = _this.selectCurrentUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Fetch Users in Company\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Show loading \n      this.setState({\n        fetching_members: true\n      }); // Set currentUser \n\n      this.fetchUsers().then(function (users) {\n        console.log(\"Nemam Amma Bhagavan Sharanam -- users\", users);\n\n        _this2.setState({\n          test: 3,\n          users: users,\n          current_user: users[0]\n        });\n\n        return _this2.fetchDirectMessageCountForUser(_this2.state.current_user);\n      }).then(function (user_msg_counts) {\n        _this2.setState({\n          members: user_msg_counts,\n          fetching_members: false\n        });\n\n        _this2.fetching_direct_message_counts = false;\n      }).catch(function (err) {\n        _this2.setState({\n          fetching_members: false,\n          fetched_members_success: false\n        });\n      });\n    }\n    /*\n      @name: fetchUsers\n      @descr: Collect all users \n    */\n\n  }, {\n    key: \"fetchUsers\",\n    value: function fetchUsers() {\n      var api = \"/api/getUsers/\";\n      return fetch(api).then(function (response) {\n        return response.json();\n      });\n    }\n    /*\n      @name: fetchDirectMessageCountForUser\n      @descr: Update state user_msg_counts with users and message counts\n    */\n\n  }, {\n    key: \"fetchDirectMessageCountForUser\",\n    value: function fetchDirectMessageCountForUser(currentUser) {\n      // Username\n      var username = encodeURIComponent(currentUser.username); // Company\n\n      var company = encodeURIComponent(currentUser.company);\n      var api = \"/api/getDirectMessagesCountForUser?username=\" + username + \"&company=\" + company;\n      return fetch(api).then(function (response) {\n        return response.json();\n      });\n    }\n  }, {\n    key: \"selectCurrentUser\",\n    value: function selectCurrentUser(event) {\n      // Collect user name\n      var username = event.target.value;\n      var current_user = {}; // Modify current user\n\n      this.state.users.forEach(function (user) {\n        if (user.username === username) Object.assign(current_user, user);\n      });\n      this.setState({\n        current_user: current_user\n      });\n    }\n  }, {\n    key: \"selectMemberToMessage\",\n    value: function selectMemberToMessage(event, member) {\n      // set member to message\n      this.selected_member_to_message = member;\n      console.log(\"Nemam Amma Bhagavan Sharanam -- selected member\", member); // Set border \n\n      this.setState({\n        active_nav: member.username\n      });\n    } // Render the Information for each user \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var memberList;\n      var mainContent; // Spinner\n\n      if (this.state.fetching_members) {\n        memberList = React.createElement(\"i\", {\n          className: \"fa fa-spinner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \" \");\n      } // Error\n      else if (!this.state.fetched_members_success) {\n          memberList = React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152\n            },\n            __self: this\n          }, \" Unable to get members \");\n          memberList += React.createElement(\"button\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, \" Retry \");\n        } else {\n          memberList = this.state.members.map(function (member) {\n            return React.createElement(\"tr\", {\n              onClick: function onClick(event) {\n                return _this3.selectMemberToMessage(event, member);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            }, React.createElement(NavLink, {\n              to: \"/directMessage\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 160\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161\n              },\n              __self: this\n            }, \" \", React.createElement(\"img\", {\n              src: member.profile_img_url,\n              style: {\n                height: \"30px\",\n                width: \"30px\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161\n              },\n              __self: this\n            }), \" \"), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162\n              },\n              __self: this\n            }, \" \", member.name, \" (\", member.new_msg_count), React.createElement(\"td\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163\n              },\n              __self: this\n            }, \" \", React.createElement(\"img\", {\n              src: green_circle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163\n              },\n              __self: this\n            }), \" \")));\n          });\n          console.log(\"Nemam Amma Bhagavan Sharanam memberList\", memberList);\n        }\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mdl-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mdl-cell mdl-cell--3-col nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"mdl-textfield__input\",\n        value: this.state.current_user.name,\n        onChange: this.selectCurrentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.users.map(function (user) {\n        return React.createElement(\"option\", {\n          name: user.username,\n          value: user.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \" \", user.name, \" \");\n      })), React.createElement(\"div\", {\n        className: \"direct-messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \" Direct Messages \"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"mdl-textfield__input\",\n        value: this.state.selected_member_status,\n        onChange: this.selectMemberStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, this.state.member_statuses.map(function (status) {\n        return React.createElement(\"option\", {\n          name: status,\n          value: status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, \" \", status, \" \");\n      })))), memberList)))), React.createElement(\"div\", {\n        className: \"mdl-cell mdl-cell--8-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/directMessage\",\n        render: function render(props) {\n          return React.createElement(DirectMessage, Object.assign({}, props, {\n            current_user: _this3.state.current_user,\n            selected_user: _this3.selected_member_to_message,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), \";\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/deepakabs/programming/node_projects/msd_messaging/client/src/App.js"],"names":["React","Component","green_circle","ReactDOM","DirectMessage","Switch","Link","NavLink","Route","withRouter","App","props","selected_member_to_message","state","users","fetching_direct_message_counts","fetched_members_success","current_user","name","profile_img_url","username","members","selected_member_status","member_statuses","test","active_nav","selectMemberToMessage","bind","selectCurrentUser","setState","fetching_members","fetchUsers","then","console","log","fetchDirectMessageCountForUser","user_msg_counts","catch","err","api","fetch","response","json","currentUser","encodeURIComponent","company","event","target","value","forEach","user","Object","assign","member","memberList","mainContent","map","height","width","new_msg_count","selectMemberStatus","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport green_circle from './images/green_circle.png';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport { DirectMessage } from './components/DirectMessage.js';\n//import { Link, NavLink, Route } from 'react-router-dom' \nimport { Switch, Link, NavLink, Route } from 'react-router-dom'\n\nimport {withRouter} from 'react-router-dom'\n\n\nclass App extends Component {\n   constructor (props) {\n    \n    super(props)\n    \n    // Initialize local variable\n    this.selected_member_to_message = \"\";\n   \n\n\n    // Declare DirectMessageUsers\n    this.state = {\n      // Set currentUser\n      users:                          [],\n      // Show loading spinner \n      fetching_direct_message_counts: false,\n      \n      // Indicate failure or success of request\n      fetched_members_success:        true,\n\n      // Display Current User at top\n      current_user:                    {\n                                        name: \"DeepakABS\",\n                                        profile_img_url: \"ABS\",\n                                        username:   \"deepakabs\"    \n                                      },\n      // Display \n      members: [],\n      selected_member_status: \"All\",\n      member_statuses:        [\"All\", \"Online\", \"Away\", \"Offline\"],\n      test:                   1,\n      \n      // For setting class\n      active_nav:     \"\"\n    }\n\n     // Class binding \n     this.selectMemberToMessage = this.selectMemberToMessage.bind(this);    \n     this.selectCurrentUser     = this.selectCurrentUser.bind(this);     \n\n  }\n\n  // Fetch Users in Company\n   componentDidMount() {\n      // Show loading \n      this.setState({fetching_members: true});\n\n      // Set currentUser \n      this.fetchUsers()\n      .then((users) => {\n\n        console.log (\"Nemam Amma Bhagavan Sharanam -- users\", users);\n        this.setState({\n            test:           3,\n            users:        users,\n            current_user: users[0]\n        })\n        \n        return this.fetchDirectMessageCountForUser(this.state.current_user)\n\n      })\n      .then((user_msg_counts) => {\n        this.setState({\n            members: user_msg_counts,\n            fetching_members: false\n        });\n        this.fetching_direct_message_counts = false;\n      \n      })\n     .catch((err) => {\n        this.setState({fetching_members: false, fetched_members_success: false})\n      });\n  }   \n\n\n  /*\n    @name: fetchUsers\n    @descr: Collect all users \n  */  \n  fetchUsers(){\n    let api     = \"/api/getUsers/\";\n\n    return fetch(api)\n    .then(response => response.json());\n  }\n\n  /*\n    @name: fetchDirectMessageCountForUser\n    @descr: Update state user_msg_counts with users and message counts\n */\n  fetchDirectMessageCountForUser(currentUser) {\n\n  // Username\n  const username = encodeURIComponent(currentUser.username);\n\n  // Company\n  const company = encodeURIComponent(currentUser.company);\n    \n  let api = \"/api/getDirectMessagesCountForUser?username=\"  + username + \"&company=\" + company;\n\n\n  return fetch(api)\n  .then(response =>  response.json())\n\n }\n\n selectCurrentUser (event) {\n  \n  // Collect user name\n  let username = event.target.value;\n  let current_user = {};\n\n  // Modify current user\n  this.state.users.forEach((user) => {\n                              if (user.username === username) \n                                Object.assign(current_user, user);\n                          }); \n\n  this.setState({current_user: current_user});\n }\n  selectMemberToMessage(event, member) {\n    // set member to message\n    this.selected_member_to_message = member;\n    console.log(\"Nemam Amma Bhagavan Sharanam -- selected member\", member);\n    // Set border \n    this.setState({ active_nav: member.username,});\n\n  }\n  // Render the Information for each user \n  render() {\n\n    var memberList;\n    var mainContent;\n    // Spinner\n    if(this.state.fetching_members) {\n        memberList = <i className=\"fa fa-spinner\"> </i>; \n     }\n    // Error\n    else if (!this.state.fetched_members_success) {\n       memberList =  <h4> Unable to get members </h4>;\n       memberList +=  <button> Retry </button>;\n     }\n\n     else  {\n        memberList =  \n                          this.state.members.map((member) => \n                            <tr onClick={(event) => this.selectMemberToMessage(event, member)} >\n                              <NavLink to=\"/directMessage\">\n                              <td> <img src={member.profile_img_url} style={{height:\"30px\", width:\"30px\"}}/> </td>\n                              <td> {member.name} ({member.new_msg_count}</td>\n                              <td> <img src={green_circle}/> </td>\n                              </NavLink>\n                            </tr>\n                        )\n        console.log(\"Nemam Amma Bhagavan Sharanam memberList\", memberList);                \n\n     }\n\n\n\n    return (\n      <div className=\"row\">\n        <div className=\"mdl-grid\">\n          <div className=\"mdl-cell mdl-cell--3-col nav\">\n              <select className=\"mdl-textfield__input\" value={this.state.current_user.name} onChange={this.selectCurrentUser}> \n                { this.state.users.map((user) => \n                  <option name={user.username} value={user.username}> {user.name} </option>\n                )}\n                </select>\n              <div className=\"direct-messages\">\n                  <h4> Direct Messages </h4>\n                  <table>\n                      <tbody>\n                        <tr>\n                          <td> </td> <td></td>\n                          <td> \n                           <select  className=\"mdl-textfield__input\" value={this.state.selected_member_status} onChange={this.selectMemberStatus}>\n                             {this.state.member_statuses.map((status) => \n                                <option name={status} value={status}> {status} </option>\n                              )}\n                            </select>\n                          </td> \n                        </tr>\n                        {memberList}\n                      </tbody>\n                    </table>\n              </div>\n           </div>\n\n            <div className=\"mdl-cell mdl-cell--8-col\">\n                <Route path='/directMessage' render={(props) => <DirectMessage {...props} current_user =  {this.state.current_user} selected_user={this.selected_member_to_message} />} />;\n            </div>\n            \n           \n       </div>   \n    </div> \n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}