{"ast":null,"code":"import _classCallCheck from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/deepakabs/programming/node_projects/msd_messaging/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport green_circle from './images/green_circle.png';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport { DirectMessage } from './components/DirectMessage.js'; //import { Link, NavLink, Route } from 'react-router-dom' \n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this)); // Initialize local variable\n\n    _this.selected_member_to_message = \"\"; // Declare DirectMessageUsers\n\n    _this.state = {\n      // Set currentUser\n      users: [],\n      // Show loading spinner \n      fetching_direct_message_counts: true,\n      // Indicate failure or success of request\n      fetched_members_success: false,\n      // Display Current User at top\n      currentUser: {\n        name: \"DeepakABS\",\n        profile_img_url: \"ABS\",\n        username: \"deepakabs\"\n      },\n      // Display \n      members: [],\n      selected_member_status: \"All\",\n      member_statuses: [\"All\", \"Online\", \"Away\", \"Offline\"],\n      test: 1\n    };\n    _this.selectMemberToMessage = _this.selectMemberToMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Fetch Users in Company\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Show loading \n      this.setState({\n        fetching_members: true,\n        fetched_members_success: false\n      }); // Set currentUser \n\n      this.fetchUsers().then(function (users) {\n        console.log(\"Nemam Amma Bhagavan Sharanam -- users\", users);\n\n        _this2.setState({\n          test: 3,\n          users: users //currentUser:  users[0]\n          // currentUser:  { ...this.state.currentUser, \n          //                name:             users[0].name, \n          //                username:         users[0].username, \n          //                company:          users[0].company,\n          //                profile_img_url:  users[0].profile_img_url}\n\n        }); // return this.fetchDirectMessageCountForUser(this.state.currentUser)\n\n      }) // .then((user_msg_counts) => {\n      //   this.setState({\n      //       members: user_msg_counts\n      //   });\n      //   this.fetching_direct_message_counts = false;\n      // });\n      //\n      .catch(function (err) {\n        _this2.setState({\n          fetching_members: false,\n          fetched_members_success: false\n        });\n      });\n    }\n    /*\n      @name: fetchUsers\n      @descr: Collect all users \n    */\n\n  }, {\n    key: \"fetchUsers\",\n    value: function fetchUsers() {\n      var api = \"/api/getUsers/\";\n      return fetch(api).then(function (response) {\n        return response.json();\n      });\n    }\n    /*\n      @name: fetchDirectMessageCountForUser\n      @descr: Update state user_msg_counts with users and message counts\n    */\n\n  }, {\n    key: \"fetchDirectMessageCountForUser\",\n    value: function fetchDirectMessageCountForUser(currentUser) {\n      // Username\n      var username = encodeURIComponent(currentUser.username); // Company\n\n      var company = encodeURIComponent(currentUser.username);\n      var api = \"/api/fetchDirectMessageCountForUser?username=\" + username + \"company=\" + company;\n      return fetch(api).then(function (response) {\n        return response.json();\n      });\n    }\n  }, {\n    key: \"selectMemberToMessage\",\n    value: function selectMemberToMessage(member) {\n      this.selected_member_to_message = member;\n    } // Render the Information for each user \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mdl-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mdl-cell mdl-cell--3-col nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        class: \"mdl-textfield__input\",\n        value: this.state.currentUser.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.state.users.map(function (user) {\n        return React.createElement(\"option\", {\n          name: user.username,\n          value: user.username,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \" user.name \");\n      })), React.createElement(\"div\", {\n        className: \"direct-messages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" Direct Messages \"), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \" \"), \" \", React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        class: \"mdl-textfield__input\",\n        value: this.state.selected_member_status,\n        onChange: this.selectMemberStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.state.member_statuses.map(function (status) {\n        return React.createElement(\"option\", {\n          name: status,\n          value: status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \" \", status, \" \");\n      })))), this.state.members.map(function (member) {\n        return React.createElement(\"tr\", {\n          onClick: \"this.selectMemberToMessage(member)\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \" \", member.profile_img_url, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, \" \", member.name, \" (\", member.new_msg_count), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \" \", React.createElement(\"img\", {\n          src: green_circle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }), \" \"));\n      }))))), React.createElement(\"div\", {\n        className: \"mdl-cell mdl-cell--8-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(DirectMessage, {\n        sender: this.state.currentUser,\n        receiver: this.selected_member_to_message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \" \"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/deepakabs/programming/node_projects/msd_messaging/client/src/App.js"],"names":["React","Component","green_circle","ReactDOM","DirectMessage","App","selected_member_to_message","state","users","fetching_direct_message_counts","fetched_members_success","currentUser","name","profile_img_url","username","members","selected_member_status","member_statuses","test","selectMemberToMessage","bind","setState","fetching_members","fetchUsers","then","console","log","catch","err","api","fetch","response","json","encodeURIComponent","company","member","map","user","selectMemberStatus","status","new_msg_count"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport green_circle from './images/green_circle.png';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport { DirectMessage } from './components/DirectMessage.js';\n//import { Link, NavLink, Route } from 'react-router-dom' \n\n\n\n\nclass App extends Component {\n   constructor () {\n    \n    super()\n    \n    // Initialize local variable\n    this.selected_member_to_message = \"\";\n    // Declare DirectMessageUsers\n    this.state = {\n      // Set currentUser\n      users:                          [],\n      // Show loading spinner \n      fetching_direct_message_counts: true,\n      \n      // Indicate failure or success of request\n      fetched_members_success:        false,\n\n      // Display Current User at top\n      currentUser:                    {\n                                        name: \"DeepakABS\",\n                                        profile_img_url: \"ABS\",\n                                        username:   \"deepakabs\"    \n                                      },\n      // Display \n      members: [],\n      selected_member_status: \"All\",\n      member_statuses:        [\"All\", \"Online\", \"Away\", \"Offline\"],\n      test:                   1\n    }\n\n     this.selectMemberToMessage = this.selectMemberToMessage.bind(this);         \n\n  }\n\n  // Fetch Users in Company\n   componentDidMount() {\n      // Show loading \n      this.setState({fetching_members: true, fetched_members_success: false});\n\n      // Set currentUser \n      this.fetchUsers()\n      .then((users) => {\n\n        console.log (\"Nemam Amma Bhagavan Sharanam -- users\", users);\n        this.setState({\n            test:           3,\n            users:        users,\n           //currentUser:  users[0]\n         // currentUser:  { ...this.state.currentUser, \n         //                name:             users[0].name, \n         //                username:         users[0].username, \n         //                company:          users[0].company,\n         //                profile_img_url:  users[0].profile_img_url}\n        })\n      \n        // return this.fetchDirectMessageCountForUser(this.state.currentUser)\n\n      })\n      // .then((user_msg_counts) => {\n      //   this.setState({\n      //       members: user_msg_counts\n      //   });\n      //   this.fetching_direct_message_counts = false;\n      \n      // });\n  //\n     .catch((err) => {\n        this.setState({fetching_members: false, fetched_members_success: false})\n      });\n  }   \n\n\n  /*\n    @name: fetchUsers\n    @descr: Collect all users \n  */  \n  fetchUsers(){\n    let api     = \"/api/getUsers/\";\n\n    return fetch(api)\n    .then(response => response.json());\n  }\n\n  /*\n    @name: fetchDirectMessageCountForUser\n    @descr: Update state user_msg_counts with users and message counts\n */\n  fetchDirectMessageCountForUser(currentUser) {\n\n  // Username\n  const username = encodeURIComponent(currentUser.username);\n\n  // Company\n  const company = encodeURIComponent(currentUser.username);\n  \n  let api = \"/api/fetchDirectMessageCountForUser?username=\"  + username + \"company=\" + company;\n\n\n  return fetch(api)\n  .then(response =>  response.json())\n\n }\n\n  selectMemberToMessage(member) {\n    this.selected_member_to_message = member;\n  }\n  // Render the Information for each user \n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"mdl-grid\">\n          <div className=\"mdl-cell mdl-cell--3-col nav\">\n              <select class=\"mdl-textfield__input\" value={this.state.currentUser.name}> \n                { this.state.users.map((user) => \n                  <option name={user.username} value={user.username}> user.name </option>\n                )}\n                </select>\n              <div className=\"direct-messages\">\n                  <h4> Direct Messages </h4>\n                  <table>\n                      <tbody>\n                        <tr>\n                          <td> </td> <td></td>\n                          <td> \n                           <select  class=\"mdl-textfield__input\" value={this.state.selected_member_status} onChange={this.selectMemberStatus}>\n                             {this.state.member_statuses.map((status) => \n                                <option name={status} value={status}> {status} </option>\n                              )}\n                            </select>\n                          </td> \n                        </tr>\n                       { this.state.members.map((member) => \n                          <tr onClick=\"this.selectMemberToMessage(member)\">\n                            <td> {member.profile_img_url} </td>\n                            <td> {member.name} ({member.new_msg_count}</td>\n                            <td> <img src={green_circle}/> </td>\n                            </tr>\n                        )}\n                      </tbody>\n                    </table>\n              </div>\n           </div>\n\n            <div className=\"mdl-cell mdl-cell--8-col\">\n                <DirectMessage sender={this.state.currentUser} receiver={this.selected_member_to_message}> </DirectMessage>\n            </div>\n            \n           \n       </div>   \n    </div> \n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}