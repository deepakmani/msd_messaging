{"ast":null,"code":"import _classCallCheck from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/deepakabs/programming/node_projects/msd_messaging/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/deepakabs/programming/node_projects/msd_messaging/client/src/components/SendDirectMessage.js\";\nimport React, { Component } from 'react';\nexport var SendDirectMessage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SendDirectMessage, _Component);\n\n  function SendDirectMessage(props) {\n    var _this;\n\n    _classCallCheck(this, SendDirectMessage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SendDirectMessage).call(this, props));\n    _this.state = {\n      message: 'Enter the message to send'\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SendDirectMessage, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        message: event.target.value\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(event) {\n      // Send the message using the API call\n      //this.state.value;\n      // Check if message is non empty\n      event.preventDefault();\n      var message = this.state.message;\n      message = message.trim();\n\n      if (message) {\n        // Create directMessage Object\n        var direct_message = {\n          message: message,\n          sender: this.props.sender,\n          receiver: this.props.receiver,\n          id: Date.now() + \"_\" + this.props.sender,\n          // Boolean indicating if message is sent\n          sent: \"sending\"\n        }; // Update the messages object\n\n        this.props.send_direct_messages(message); // Set status as sending\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"send-message-textarea\",\n        value: this.state.message,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Send\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SendDirectMessage;\n}(Component);","map":{"version":3,"sources":["/Users/deepakabs/programming/node_projects/msd_messaging/client/src/components/SendDirectMessage.js"],"names":["React","Component","SendDirectMessage","props","state","message","handleChange","bind","sendMessage","event","setState","target","value","preventDefault","trim","direct_message","sender","receiver","id","Date","now","sent","send_direct_messages"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,WAAaC,iBAAb;AAAA;AAAA;AAAA;;AACE,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AAPiB;AAQlB;;AATH;AAAA;AAAA,iCAWeE,KAXf,EAWsB;AAClB,WAAKC,QAAL,CAAc;AAACL,QAAAA,OAAO,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD;AAbH;AAAA;AAAA,gCAecH,KAfd,EAeqB;AACjB;AACA;AACA;AACAA,MAAAA,KAAK,CAACI,cAAN;AACA,UAAIR,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAzB;AACIA,MAAAA,OAAO,GAAGA,OAAO,CAACS,IAAR,EAAV;;AAEJ,UAAIT,OAAJ,EAAa;AACX;AACA,YAAIU,cAAc,GAAG;AACCV,UAAAA,OAAO,EAAEA,OADV;AAECW,UAAAA,MAAM,EAAG,KAAKb,KAAL,CAAWa,MAFrB;AAGCC,UAAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWc,QAHtB;AAICC,UAAAA,EAAE,EAAQC,IAAI,CAACC,GAAL,KAAa,GAAb,GAAmB,KAAKjB,KAAL,CAAWa,MAJzC;AAKC;AACAK,UAAAA,IAAI,EAAI;AANT,SAArB,CAFW,CAWX;;AACA,aAAKlB,KAAL,CAAWmB,oBAAX,CAAgCjB,OAAhC,EAZW,CAeX;AAGD;;AACDI,MAAAA,KAAK,CAACI,cAAN;AACD;AA3CH;AAAA;AAAA,6BA6CW;AACP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKL,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAU,QAAA,SAAS,EAAC,uBAApB;AAA4C,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,OAA9D;AAAuE,QAAA,QAAQ,EAAE,KAAKC,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;AAvDH;;AAAA;AAAA,EAAuCL,SAAvC","sourcesContent":["import React, { Component } from 'react';\n\nexport class SendDirectMessage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: 'Enter the message to send'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({message: event.target.value});\n  }\n\n  sendMessage(event) {\n    // Send the message using the API call\n    //this.state.value;\n    // Check if message is non empty\n    event.preventDefault();\n    var message = this.state.message;\n        message = message.trim();\n\n    if (message) {\n      // Create directMessage Object\n      var direct_message = {\n                            message: message,\n                            sender:  this.props.sender,\n                            receiver: this.props.receiver,\n                            id:       Date.now() + \"_\" + this.props.sender,   \n                            // Boolean indicating if message is sent\n                            sent:   \"sending\"\n      };\n\n      // Update the messages object\n      this.props.send_direct_messages(message);\n\n\n      // Set status as sending\n\n\n    }   \n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.sendMessage}>\n        <label>\n\n          <textarea className=\"send-message-textarea\" value={this.state.message} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Send\" />\n      </form>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}